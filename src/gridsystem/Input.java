/*
 * LineInput2.java
 *
 * Created on 17 November 2009, 14:57
 */
package gridsystem;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  Karl
 */
public class Input extends javax.swing.JFrame {

    /** Creates new form LineInput2 */
    private Grid grid;
    private Output output;
    private Line line;
    private ResultsHandler handler;
    private ArrayList<Grid> grids;
    private int gridNumber;

    public Input() {
        initComponents();
        // if (grid.getGrid() == false){
        grids = new ArrayList<Grid>();
        gridNumber = 0;
        //handler = new ResultsHandler();
    //}else{
    //  System.out.println("there is already a grid");
    //}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInputPanel = new javax.swing.JPanel();
        lineDetailsLabel = new javax.swing.JLabel();
        gridDetailsLabel = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        inequalityComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        granularityLabel = new javax.swing.JLabel();
        sizeSpinner = new javax.swing.JSpinner();
        jSeparator2 = new javax.swing.JSeparator();
        createGridButton = new javax.swing.JButton();
        insertLineButton = new javax.swing.JButton();
        granularitySpinner = new javax.swing.JSpinner();
        signComboBox = new javax.swing.JComboBox();
        xMultipleSpinner = new javax.swing.JSpinner();
        yMultipleSpinner = new javax.swing.JSpinner();
        answerSpinner = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        resetCurrentGridButton = new javax.swing.JButton();
        clearStoredGridsButton = new javax.swing.JButton();
        mergeGridsButton = new javax.swing.JButton();
        resultButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grid Representation (Input)");

        lineDetailsLabel.setText("Insert Line Details");

        gridDetailsLabel.setText("Insert Grid Details");

        xLabel.setText("x");

        yLabel.setText("y");

        inequalityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ">=", "<=", ">", "<" }));

        jLabel1.setText("Dimension Size");

        granularityLabel.setText("Granularity");

        createGridButton.setText("Create Grid");
        createGridButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createGridButtonActionPerformed(evt);
            }
        });

        insertLineButton.setText("Insert Line");
        insertLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertLineButtonActionPerformed(evt);
            }
        });

        signComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "+", "-" }));

        javax.swing.GroupLayout userInputPanelLayout = new javax.swing.GroupLayout(userInputPanel);
        userInputPanel.setLayout(userInputPanelLayout);
        userInputPanelLayout.setHorizontalGroup(
            userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addGroup(userInputPanelLayout.createSequentialGroup()
                        .addGroup(userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gridDetailsLabel)
                            .addGroup(userInputPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(granularityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(granularitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(152, Short.MAX_VALUE))
                    .addGroup(userInputPanelLayout.createSequentialGroup()
                        .addComponent(lineDetailsLabel)
                        .addContainerGap(475, Short.MAX_VALUE))))
            .addGroup(userInputPanelLayout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(createGridButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
            .addGroup(userInputPanelLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(xMultipleSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yMultipleSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inequalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
            .addGroup(userInputPanelLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(insertLineButton, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(196, 196, 196))
        );
        userInputPanelLayout.setVerticalGroup(
            userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gridDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(granularityLabel)
                    .addComponent(granularitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createGridButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lineDetailsLabel)
                .addGap(11, 11, 11)
                .addGroup(userInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xLabel)
                    .addComponent(xMultipleSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yLabel)
                    .addComponent(inequalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yMultipleSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(insertLineButton)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        resetCurrentGridButton.setText("Reset Current Grid");
        resetCurrentGridButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetCurrentGridButtonActionPerformed(evt);
            }
        });

        clearStoredGridsButton.setText("Clear Stored Grids");
        clearStoredGridsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearStoredGridsButtonActionPerformed(evt);
            }
        });

        mergeGridsButton.setText("Merge Grids");
        mergeGridsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeGridsButtonActionPerformed(evt);
            }
        });

        resultButton.setText("Results");
        resultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(resultButton)
                .addGap(29, 29, 29)
                .addComponent(mergeGridsButton)
                .addGap(57, 57, 57)
                .addComponent(resetCurrentGridButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(clearStoredGridsButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(userInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(userInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultButton)
                    .addComponent(clearStoredGridsButton)
                    .addComponent(resetCurrentGridButton)
                    .addComponent(mergeGridsButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void resetCurrentGridButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetCurrentGridButtonActionPerformed

        grid = new Grid();
        if (grid.getGridBoolean() == true && sizeSpinner.getValue().hashCode() == 0) {
            grid.createGrid(16, 1);
            grids.set(gridNumber - 1, grid);
            output = new Output(grids.get(gridNumber - 1));
            //output.setVisible(false);
            output = new Output(grid);
        } else if (grid.getGridBoolean() == true && sizeSpinner.getValue().hashCode() > 0) {
            grid.createGrid(sizeSpinner.getValue().hashCode(), granularitySpinner.getValue().hashCode());
            grids.set(gridNumber - 1, grid);
            System.out.println("Grid It Worked!!!");
            //output.setVisible(false);

            output = new Output(grids.get(gridNumber - 1));
        }
        
}//GEN-LAST:event_resetCurrentGridButtonActionPerformed

    private void createGridButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createGridButtonActionPerformed
        grid = new Grid();
        if (grid.getGridBoolean() == true && sizeSpinner.getValue().hashCode() == 0) {
            
            gridNumber++;
            grid.createGrid(16, 1);
            grids.add(grid);
            System.out.println("Grid It Worked!!!");
            output = new Output(grids.get(gridNumber - 1));
            
        } else if (grid.getGridBoolean() == true && sizeSpinner.getValue().hashCode() > 0) {
            gridNumber++;
           // grid = new Grid();
            grid.createGrid(sizeSpinner.getValue().hashCode(), granularitySpinner.getValue().hashCode());
            System.out.println("Grid It Worked!!!");
            grids.add(grid);
            output = new Output(grids.get(gridNumber - 1));
        } else {
            System.out.println("there is already a grid");
        }
    }//GEN-LAST:event_createGridButtonActionPerformed

    private void insertLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertLineButtonActionPerformed
        //new Line (2,"+",3,">=",21);
        //line = new Line(xMultipleSpinner.getValue().hashCode(), signComboBox.getSelectedItem().toString(), 
        //   yMultipleSpinner.getValue().hashCode(), inequalityComboBox.getSelectedItem().toString(), 
        // answerSpinner.getValue().hashCode());


        //grid.fillGrid(line);
        grids.get(gridNumber - 1).fillGrid(xMultipleSpinner.getValue().hashCode(), signComboBox.getSelectedItem().toString(),
                yMultipleSpinner.getValue().hashCode(), inequalityComboBox.getSelectedItem().toString(),
                answerSpinner.getValue().hashCode());

        String lineEquation = new String();
        lineEquation = "yosh" + '\n';


//        System.out.println(line.getXMultiple() + "x " + line.getSign() + " " + line.getYMultiple() + "y " + line.getInequality() + " " + line.getAnswer());        

        output.repaint();

        //grid.countCells();
        
        System.out.println("It Worked!!!");

        
    }//GEN-LAST:event_insertLineButtonActionPerformed

    private void mergeGridsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        int gridSize = grids.get(0).getSize();
        int graduaalitySize = grids.get(0).getGranduality();        
        boolean checker = true;
        
        for(Grid currentGrid : grids){
            if(currentGrid.getSize() != gridSize){
                checker = false;                        
            }             
        }
        if (checker == false){
            System.out.println("These Grids cannot be merged together");
        }else if (checker == true) {
            Grid overallGrid = new Grid();
            overallGrid.createGrid(gridSize, graduaalitySize);
            
            for(Grid currentGrid : grids){
            int x = 0;
            int y = 0;       
                while (y <= gridSize - 1){
                    while (x <= gridSize - 1){
                        if(currentGrid.getGrid().get(gridSize*y+x).getCoordinateContents() == true){
                            overallGrid.setCoordinate(gridSize*y+x, true);
                        }
                        x++;
                    }
                    x = 0;
                    y++;
                }
            }
           grids.add(overallGrid);
           gridNumber++;
        }
        output = new Output(grids.get(gridNumber - 1));
            
        
        
    }
    
    private void clearStoredGridsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        grids.clear();
        gridNumber = 0;
        System.out.println("Grids Cleared");
    }
    
    private void resultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultButtonActionPerformed
        
        handler = new ResultsHandler();
        
        try {
            handler.result();
         } catch (IOException ex) {
     Logger.getLogger(Input.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

        
    /*
            handler.resultWriter();//GEN-LAST:event_resultButtonActionPerformed
    private void mergeGridsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeGridsButtonActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_mergeGridsButtonActionPerformed

private void clearStoredGridsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearStoredGridsButtonActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_clearStoredGridsButtonActionPerformed
*/    
        
    public Line getLine() {
        return line;
    }

    public int getGridNumber(){
        return gridNumber;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Input().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner answerSpinner;
    private javax.swing.JButton clearStoredGridsButton;
    private javax.swing.JButton createGridButton;
    private javax.swing.JLabel granularityLabel;
    private javax.swing.JSpinner granularitySpinner;
    private javax.swing.JLabel gridDetailsLabel;
    private javax.swing.JComboBox inequalityComboBox;
    private javax.swing.JButton insertLineButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lineDetailsLabel;
    private javax.swing.JButton mergeGridsButton;
    private javax.swing.JButton resetCurrentGridButton;
    private javax.swing.JButton resultButton;
    private javax.swing.JComboBox signComboBox;
    private javax.swing.JSpinner sizeSpinner;
    private javax.swing.JPanel userInputPanel;
    private javax.swing.JLabel xLabel;
    private javax.swing.JSpinner xMultipleSpinner;
    private javax.swing.JLabel yLabel;
    private javax.swing.JSpinner yMultipleSpinner;
    // End of variables declaration//GEN-END:variables
}
